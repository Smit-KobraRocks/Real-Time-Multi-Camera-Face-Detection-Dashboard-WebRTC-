# syntax=docker/dockerfile:1.6

FROM node:20-alpine AS base
WORKDIR /app
RUN apk add --no-cache libc6-compat python3 make g++

FROM base AS deps
COPY package.json ./
RUN npm install

FROM base AS builder
ARG PRISMA_VERSION=5.15.0
COPY package.json ./
COPY --from=deps /app/node_modules ./node_modules
COPY prisma ./prisma
COPY tsconfig.json ./
COPY tsconfig.node.json ./
COPY tsconfig.server.json ./
COPY src/server ./src/server

ARG DATABASE_URL=postgresql://postgres:postgres@postgres:5432/face_detection
ENV DATABASE_URL=${DATABASE_URL}
ENV NODE_ENV=production
RUN npm run prisma:generate
RUN npm run backend:build
RUN npm prune --omit=dev
RUN npm install prisma@${PRISMA_VERSION} --no-save

FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production

COPY package.json ./
COPY prisma ./prisma
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist/server ./dist/server

RUN chown -R node:node /app

EXPOSE 3000

USER node

CMD ["node", "dist/server/index.js"]
